{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1537429362788},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1537429362788},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1537429362788},{"_id":"themes/next/.git","hash":"042ff34da0707513a5681580b37513c890c671ef","modified":1537429362784},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1537429362788},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1537429362792},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1537429362792},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1537429362792},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1537429362792},{"_id":"themes/next/README.md","hash":"c1d6d1c6b75736b892e179865833ea58da5ca9d2","modified":1537429362792},{"_id":"themes/next/_config.yml","hash":"da551f085abcf128ae13aa0db2fb7cb987b9b114","modified":1537537903150},{"_id":"themes/next/bower.json","hash":"5391684ba84fe633bc7877ab711a7d8a0072ceda","modified":1537429362792},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1537429362792},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1537429362792},{"_id":"themes/next/package.json","hash":"9acf6b8c8194f8a366025c8aab64d236908e62a1","modified":1537429362800},{"_id":"source/_posts/2018-9-21校内测试.md","hash":"05d2ea532279700eafae8d325119e8932303da9b","modified":1537537657230},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1537400287000},{"_id":"source/about/index.md","hash":"66264aff5ec6206c861725892a8a4a053c860bd5","modified":1537411642000},{"_id":"source/tags/index.md","hash":"c97edadcff37012ab8ff7b22af5acc597d9b334a","modified":1537411603000},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1537429362788},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"a5335a99377069ae76fd993d488bc3eaf48f3a05","modified":1537429362792},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1537429362792},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1537429362792},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1537429362792},{"_id":"themes/next/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1537429362792},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1537429362792},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1537429362792},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1537429362792},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1537429362792},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1537429362792},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1537429362792},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1537429362792},{"_id":"themes/next/docs/MATH.md","hash":"0ae4258950de01a457ea8123a8d13ec6db496e53","modified":1537429362792},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1537429362792},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1537429362792},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1537429362792},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1537429362792},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1537429362792},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1537429362792},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1537429362792},{"_id":"themes/next/languages/ja.yml","hash":"e331b15b1fda0f2285d25853f834682ab8dc3c39","modified":1537429362792},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1537429362792},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1537429362792},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1537429362792},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1537429362792},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1537429362792},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1537429362796},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1537429362796},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1537429362796},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1537429362796},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1537429362796},{"_id":"themes/next/layout/_layout.swig","hash":"1b59036ccb2ad571503b94587f458fad46775642","modified":1537429362796},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1537429362800},{"_id":"themes/next/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1537429362800},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1537429362800},{"_id":"themes/next/layout/page.swig","hash":"79040bae5ec14291441b33eea341a24a7c0e9f93","modified":1537429362800},{"_id":"themes/next/layout/post.swig","hash":"318249db246a57e9422875a2457c6acfce974ba5","modified":1537429362800},{"_id":"themes/next/layout/schedule.swig","hash":"3e9cba5313bf3b98a38ccb6ef78b56ffa11d66ee","modified":1537429362800},{"_id":"themes/next/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1537429362800},{"_id":"themes/next/scripts/helpers.js","hash":"a70bfad3efda76738dab12e28e8b75e3989ee3da","modified":1537429362800},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1537429362800},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1537429362800},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1537429362812},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1537429362812},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1537429362812},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537429362804},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1537429362792},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1537429362792},{"_id":"themes/next/docs/ru/README.md","hash":"edfe0cfb8b2c9f0effd3beb868af9bfd0fabb3a6","modified":1537429362792},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1537429362792},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1537429362792},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1537429362792},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bd2c955d9b7b1b45bd74a4536717d547e03fcde3","modified":1537429362792},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1537429362792},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1537429362792},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1537429362792},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"e03607b608db4aa7d46f6726827c51ac16623339","modified":1537429362792},{"_id":"themes/next/docs/zh-CN/README.md","hash":"46b264623af21211a0a9c4ba0cf1318a80eeb9fb","modified":1537429362792},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1537429362792},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1537429362796},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1537429362796},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1537429362796},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1537429362796},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0790ddbc349508d7ece45a9a4391d0a1cd7263cc","modified":1537429362796},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1537429362796},{"_id":"themes/next/layout/_macro/post.swig","hash":"27922af64ecb9db9a28bcf1c98fb68b26bf0b67a","modified":1537429362796},{"_id":"themes/next/layout/_macro/reward.swig","hash":"bd5778d509c51f4b1d8da3a2bc35462929f08c75","modified":1537429362796},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1f3121ef66a4698fd78f34bf2594ef79a407c92c","modified":1537429362796},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1537429362796},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1537429362796},{"_id":"themes/next/layout/_partials/comments.swig","hash":"eafff2d623af8991844f34819a60e37ac11ef245","modified":1537429362796},{"_id":"themes/next/layout/_partials/footer.swig","hash":"05cdaf9b6cb32afd442b228cd247aaf9468a31ed","modified":1537429362796},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1537429362796},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1537429362796},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1537429362796},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1537429362796},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1537429362796},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1537429362796},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1537429362796},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1537429362796},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1537429362796},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1537429362796},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1537429362796},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1537429362796},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1537429362800},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1537429362800},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1537429362800},{"_id":"themes/next/scripts/tags/button.js","hash":"4b12c376bea894d23cca0f9fcb3d6518b6db279d","modified":1537429362800},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1537429362800},{"_id":"themes/next/scripts/tags/exturl.js","hash":"1412ce2ef59fa4137b697a507fd759ff067a2398","modified":1537429362800},{"_id":"themes/next/scripts/tags/full-image.js","hash":"e282bf5a7c70b3d354001e8f66d3bef1a4fbb79e","modified":1537429362800},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"981e01aaf45a1f0f23ce0796d03134f9e437aaca","modified":1537429362800},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1537429362800},{"_id":"themes/next/scripts/tags/label.js","hash":"f0ecd3b5773b19a6bd93a819dfe0c49ee418e4de","modified":1537429362800},{"_id":"themes/next/scripts/tags/note.js","hash":"adb945ba93ac487d46b969ca4e59d3681b8f8d1c","modified":1537429362800},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e37761253d68a29593fe9ed2fe403f49b6e971de","modified":1537429362800},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1537429362804},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1537429362804},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1537429362804},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1537429362804},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1537429362804},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1537429362804},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1537429362804},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1537429362804},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1537429362804},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1537429362804},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1537429362804},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1537429362804},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1537429362804},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537429362804},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1537429362804},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537429362804},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1537429362808},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1537429362808},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1537429362808},{"_id":"source/_posts/2018-9-21校内测试/pro.pdf","hash":"9b6e156514121225dc3b8dd8e94e5779e46be70d","modified":1537537158684},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537429362796},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537429362796},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537429362804},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537429362804},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537429362804},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537429362804},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537429362804},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1537429362796},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1537429362796},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1537429362796},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1537429362796},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1537429362796},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1537429362796},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1537429362796},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1537429362796},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1537429362796},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1537429362796},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1537429362796},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1537429362796},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1537429362796},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1537429362796},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1537429362796},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1537429362796},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1537429362796},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1537429362796},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1537429362796},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1537429362796},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1537429362796},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1537429362796},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"07307f1f0e0e9858f2c7143cbdfcb2a9a92149ab","modified":1537429362796},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1537429362796},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1537429362796},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1537429362796},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1537429362796},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1537429362796},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c28f3f4aa31d7f996d26a97df6cd7ffa9bfd2cec","modified":1537429362796},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1537429362796},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1537429362796},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1537429362796},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1537429362796},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"03ef008bc95e8e83232e5464a6c63d6157d33a5e","modified":1537429362796},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1537429362796},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"03e83f1311faafb7dddc2899042ed1cacd5c995e","modified":1537429362796},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"2c74a96dd314e804d801f8773ac1b2e0a970fce3","modified":1537429362796},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"34421679cae6581697cd3ab7c3729eb220e3e3f5","modified":1537429362796},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1537429362796},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1537429362796},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1537429362796},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1537429362800},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1537429362800},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1537429362800},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1537429362800},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1537429362804},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1537429362804},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1537429362804},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"51c2907e5c50c2614419b670fbdec183ae7f7f5d","modified":1537429362804},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e1f6f59ad6e562dfe640ee4ed5d1ac9b6aba4114","modified":1537429362804},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1537429362804},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c167eeb6b736f7b021fba98c38c2c21032ee1255","modified":1537429362804},{"_id":"themes/next/source/css/_variables/base.styl","hash":"0b43ddd92e395342703550f629699c5e591fd68b","modified":1537429362804},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1537429362808},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1537429362808},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1537429362808},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1537429362808},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1537429362808},{"_id":"themes/next/source/js/src/motion.js","hash":"b45d2c0d48f2c8e6a0621b8063845f76b89476cc","modified":1537429362808},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1537429362808},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1537429362808},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1537429362808},{"_id":"themes/next/source/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1537429362808},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1537429362808},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1537429362808},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1537429362808},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1537429362808},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1537429362808},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1537429362812},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1537429362812},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1537429362812},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1537429362812},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1537429362800},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1537429362800},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"aebbd86500d819c4532ab290c62b6f432bc2f878","modified":1537429362804},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1537429362804},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1537429362804},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"efc40a32487e0ac7b94b1ca81bdbdcc4ec8f2924","modified":1537429362804},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1537429362804},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1537429362804},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"fca5320e2644edcd663888863899d1b80352439b","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"876b5d99061025cf485a3cac440624ded5734319","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1537429362804},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"86c9976f517da4574495372da33e03b95b2a5d52","modified":1537429362808},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1537429362808},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1537429362808},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1537429362808},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1537429362812},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1537429362812},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1537429362808},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1537429362812},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1537429362812},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"549a8a0b5301d32acd86a97f17340cdfcd46fb63","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"c0ac49fadd33ca4a9a0a04d5ff2ac6560d0ecd9e","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"578bb2d5f24cad39205bbafb4c39c7e9962b9fa9","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"ed9608d2740a33664eb703f806c218a4fc520087","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"e18b90c97aaff027e795f5a0cb10476a71bf1c3a","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1537429362800},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"cf2185a0ea170fd8450f592e859a6c941141e5ee","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1537429362804},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c18c91ab3c60169ebe654c80c968fd8458786a3","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1537429362804},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1537429362804},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1537429362808},{"_id":"public/atom.xml","hash":"cd7f5247f85197d59b50df74a197551310644b7a","modified":1537538015132},{"_id":"public/about/index.html","hash":"bcb73d2c8047c623db0761cc657cc88909386bcd","modified":1537538015144},{"_id":"public/tags/index.html","hash":"8cbe4535753dfca2ac5e2a6de7e85fd8cbe7ff17","modified":1537538015144},{"_id":"public/2018/09/20/hello-world/index.html","hash":"de7c5dc535a4e2d8184c494e11c89cf1e7906ad2","modified":1537538015144},{"_id":"public/archives/index.html","hash":"35b72169f79f6616fb7e2cf328a0b52f23bb489e","modified":1537538015144},{"_id":"public/archives/2018/index.html","hash":"89ccc3723822b2aa8d99aab36e7c2661ffc8fb41","modified":1537538015144},{"_id":"public/archives/2018/09/index.html","hash":"fff6a1c0625e7cfbcd0ca94c0f3f32fb6080ac16","modified":1537538015144},{"_id":"public/index.html","hash":"1e059a0f7d422eec7a943c48db52814cf1350208","modified":1537538015144},{"_id":"public/tags/校内测试/index.html","hash":"cc8056254009335072bb802a8f89eda7e489c035","modified":1537538015144},{"_id":"public/2018/09/21/2018-9-21校内测试/index.html","hash":"ec79787e1455d6b127a21da7bb4d10477b9b3f64","modified":1537538015144},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1537538015149},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1537538015150},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1537538015150},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1537538015150},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1537538015150},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1537538015150},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1537538015150},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1537538015150},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1537538015150},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1537538015150},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1537538015150},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1537538015151},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537538015151},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1537538015151},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537538015151},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1537538015151},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1537538015151},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1537538015151},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1537538015151},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1537538015151},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1537538015883},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1537538015887},{"_id":"public/2018/09/21/2018-9-21校内测试/pro.pdf","hash":"9b6e156514121225dc3b8dd8e94e5779e46be70d","modified":1537538015888},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1537538015893},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1537538015893},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1537538015893},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1537538015893},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1537538015893},{"_id":"public/js/src/motion.js","hash":"b45d2c0d48f2c8e6a0621b8063845f76b89476cc","modified":1537538015893},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1537538015893},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1537538015893},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1537538015893},{"_id":"public/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1537538015893},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1537538015894},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1537538015894},{"_id":"public/js/src/schemes/pisces.js","hash":"86c9976f517da4574495372da33e03b95b2a5d52","modified":1537538015894},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1537538015894},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1537538015894},{"_id":"public/css/main.css","hash":"f8b1599ba978db1cec4ce9d90b16d22357ebdfc9","modified":1537538015894},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1537538015894},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1537538015894},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1537538015894},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1537538015894},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1537538015894},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1537538015895},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1537538015895}],"Category":[],"Data":[],"Page":[{"title":"关于","date":"2018-09-20T01:48:56.000Z","type":"about","comments":0,"_content":"\n**本蒟蒻来自 GRYZ ~~弱省弱校 dalao 们应该没听过~~**\n\n高二狗\n\n> QQ : 1369639556\n>\n> Luogu ID : 奔波儿霸\n>\n> Email : wlz15263859383@gmail.com\\1369639556@qq.com\n\n这个 blog 的建造过程几经波折，重建了得有 3、4 遍，太不容易了。\n\n要感谢 [MingqiHuang](https://github.com/MingqiHuang) 的帮助 QAQ。\n\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2018-09-20 09:48:56\ntype: \"about\"\ncomments: false\n---\n\n**本蒟蒻来自 GRYZ ~~弱省弱校 dalao 们应该没听过~~**\n\n高二狗\n\n> QQ : 1369639556\n>\n> Luogu ID : 奔波儿霸\n>\n> Email : wlz15263859383@gmail.com\\1369639556@qq.com\n\n这个 blog 的建造过程几经波折，重建了得有 3、4 遍，太不容易了。\n\n要感谢 [MingqiHuang](https://github.com/MingqiHuang) 的帮助 QAQ。\n\n","updated":"2018-09-20T02:47:22.000Z","path":"about/index.html","layout":"page","_id":"cjmc2fnp80001r410uz7ebfft","content":"<p><strong>本蒟蒻来自 GRYZ <del>弱省弱校 dalao 们应该没听过</del></strong></p>\n<p>高二狗</p>\n<blockquote>\n<p>QQ : 1369639556</p>\n<p>Luogu ID : 奔波儿霸</p>\n<p>Email : <a href=\"mailto:wlz15263859383@gmail.com\" target=\"_blank\" rel=\"noopener\">wlz15263859383@gmail.com</a>\\<a href=\"mailto:1369639556@qq.com\" target=\"_blank\" rel=\"noopener\">1369639556@qq.com</a></p>\n</blockquote>\n<p>这个 blog 的建造过程几经波折，重建了得有 3、4 遍，太不容易了。</p>\n<p>要感谢 <a href=\"https://github.com/MingqiHuang\" target=\"_blank\" rel=\"noopener\">MingqiHuang</a> 的帮助 QAQ。</p>\n","site":{"data":{}},"excerpt":"本蒟蒻来自 GRYZ 弱省弱校 dalao 们应该没听过\n\n高二狗\n\nQQ : 1369639556\n\nLuogu ID : 奔波儿霸\n\nEmail : wlz15263859383@gmail.com\\1369639556@qq.com\n\n这个 blog 的建造过程几经波折，重建了得有 3、4 遍，太不容易了。\n\n要感谢 MingqiHuang 的帮助 QAQ。","more":"<p><strong>本蒟蒻来自 GRYZ <del>弱省弱校 dalao 们应该没听过</del></strong></p>\n<p>高二狗</p>\n<blockquote>\n<p>QQ : 1369639556</p>\n<p>Luogu ID : 奔波儿霸</p>\n<p>Email : <a href=\"mailto:wlz15263859383@gmail.com\" target=\"_blank\" rel=\"noopener\">wlz15263859383@gmail.com</a>\\<a href=\"mailto:1369639556@qq.com\" target=\"_blank\" rel=\"noopener\">1369639556@qq.com</a></p>\n</blockquote>\n<p>这个 blog 的建造过程几经波折，重建了得有 3、4 遍，太不容易了。</p>\n<p>要感谢 <a href=\"https://github.com/MingqiHuang\" target=\"_blank\" rel=\"noopener\">MingqiHuang</a> 的帮助 QAQ。</p>\n"},{"title":"标签","date":"2018-09-20T01:49:02.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-09-20 09:49:02\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-09-20T02:46:43.000Z","path":"tags/index.html","layout":"page","_id":"cjmc2fnzp0005r410pdqcjhnn","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"2018.9.21校内测试","date":"2018-09-21T13:36:42.000Z","mathjax":true,"_content":"\n{% pdf ./pro.pdf %}\n\n### 解题报告---9.21\n\n---\n\n\n\n#### $\\text{T1}$ 相遇\n\n---\n\n\n\n##### 反思\n\n---\n\nT1 考到了 LCA，之前觉得没必要学，虽然也看过些文章，但大部分都没看懂，所以一直都不会，结果今天出上了这样的一道题，真尴尬，想着写写暴力吧，发现暴力也是求 LCA，无奈，遂放弃，考完试的下午就开始学 LCA，以后有能力学的东西尽量学学，不能老想着偷懒。\n\n\n\n##### 解题思路\n\n---\n\n画几个图会发现 $a\\rightarrow b,c\\rightarrow d$ 两条路径如果能够相交的话，需要满足其中一对点的 $\\text{LCA}$ 在另两个点之间的路径上。\n\n而一个点 $x$ 在一条路径 $s\\rightarrow t$ 上的充要条件是如下：\n\n- $depth[\\text{LCA}(s,t)]\\le depth[x]$\n- $\\text{LCA}(x,s)=x \\ ||\\  \\text{LCA}(x,t)=x$\n\n然后我们就可以做 $\\text{LCA}$ 进行求解，一组数据最多询问 $4$ 次。\n\n\n\n##### 代码\n\n---\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\nconst int maxn = 2e5+3;\nint n, head[maxn], cnt, depth[maxn], T, fa[maxn][32], m;\nstruct edge {\n\tint to, nxt;\n}ed[maxn], tmp;\nstruct P100 {\n\tinline void reset() {\n\t\tcnt = 0;\n\t\ttmp.to = tmp.nxt = 0;\n\t\tfill(ed+1, ed+1+maxn-3, tmp);\n\t\tmemset(head, 0, sizeof(head));\n\t\tmemset(depth, 0, sizeof(depth));\n\t\tmemset(fa, 0, sizeof(fa));\n\t}\n\tinline void addedge(int x, int y) {\n\t\ted[++cnt].nxt = head[x], head[x] = cnt, ed[cnt].to = y;\n\t\ted[++cnt].nxt = head[y], head[y] = cnt, ed[cnt].to = x;\n\t}\n\tinline void init() {\n\t\tfor(int j=1; 1<<j<=n; j++)\n\t\t\tfor(int i=1; i<=n; i++)\n\t\t\t\tfa[i][j] = fa[fa[i][j-1]][j-1];\n\t}\n\tinline void dfs(int u) {\n\t\tfor(int i=head[u]; i; i=ed[i].nxt) {\n\t\t\tif(ed[i].to == fa[u][0]) continue;\n\t\t\tfa[ed[i].to][0] = u;\n\t\t\tdepth[ed[i].to] = depth[u] + 1;\n\t\t\tdfs(ed[i].to);\n\t\t}\n\t}\n\tinline int lca(int a, int b) {\n\t\tif(depth[a] > depth[b]) swap(a, b);\n\t\tint h = depth[b] - depth[a];\n\t\tfor(int i=0; 1<<i<=h; i++)\n\t\t\tif((1<<i)&h) b = fa[b][i];\n\t\tif(a != b) {\n\t\t\tfor(int i=(int)log2(n); i>=0; i--) {\n\t\t\t\tif(fa[a][i] != fa[b][i])\n\t\t\t\t\ta = fa[a][i], b = fa[b][i];\n\t\t\t}\n\t\t\ta = fa[a][0];\n\t\t}\n\t\treturn a;\n\t}\n\tinline void solve() {\n\t\tdfs(1);\n\t\tinit();\n\t}\n\tinline bool judge(int a, int b, int c, int d) {\n\t\tint x = lca(a, b), y = lca(c, d);\n\t\tif(depth[x] < depth[y]) swap(x, y), swap(a, c), swap(b, d);\n\t\tif(lca(x, c) == x || lca(x, d) == x) return true;\n\t\treturn false;\n\t}\n}p100;\nint main() {\n\tfreopen(\"railway.in\", \"r\", stdin);\n\tfreopen(\"railway.out\", \"w\", stdout);\n\tscanf(\"%d\", &T);\n\twhile (T--) {\n\t\tp100.reset();\n\t\tscanf(\"%d%d\", &n, &m);\n\t\tint x, y;\n\t\tfor(int i=1; i<n; i++) {\n\t\t\tscanf(\"%d%d\", &x, &y);\n\t\t\tp100.addedge(x, y);\n\t\t}\n\t\tp100.solve();\n\t\tint a, b, c, d;\n\t\tfor(int i=1; i<=m; i++) {\n\t\t\tscanf(\"%d%d%d%d\", &a, &b, &c, &d);\n\t\t\tif(p100.judge(a, b, c, d)) printf(\"YES\\n\");\n\t\t\telse printf(\"NO\\n\");\n\t\t}\n\t}\n\tfclose(stdin);\n\tfclose(stdout);\n}\n```\n\n\n\n\n\n#### $\\text{T2}$ 计数\n\n---\n\n\n\n##### 反思\n\n---\n\n不开 `long long` 见祖宗，写了个 $60$ 分的暴力，因为没开 `long long` 所以 WA 成了 30 分，以后做题先看好数据范围，可以为了以防万一，能开 `long long` 就开 `long long` 。\n\n\n\n##### 解题思路\n\n---\n\n在考场上写了个线段树维护区间最大最小值。然后 $N^2$ 枚举，左右端点，求和。算上查询的时间是 $\\log N$ 总时间复杂度为 $N^2\\log N$ 可以过 60 分。\n\n再说正解：\n\n题目大意可以简化为求下面这个式子的值：\n$$\n\\sum_{r=1}^{n}\\sum_{l=1}^{r}max(a[x]-a[y],l\\le x,y\\le r)\n$$\n观察上面的式子，其实可以从 $1\\rightarrow n$ 算出每个数对答案的影响，相加就是答案。\n\n那么怎么算贡献呢。用单调栈维护，一个点被弹出后就将其贡献减去，被压入后，就将其贡献加上。\n\n求作为最大值的贡献和求作为最小值的贡献其实差不多，求最小值时将数组变成负数就又变成了求最大值的问题。\n\n所以可以用一个函数解决。\n\n\n\n##### 代码\n\n---\n\n60 分\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nconst int maxn = 1e5+3, inf = 2147483647;\ntypedef long long LL;\nLL T, n, a[maxn];\nstruct Tree {\n\tLL l, r, mx, mn;\n}tree[400003], tmp;\nLL ans_mn = inf, ans_mx;\nstruct P60 {\n\tinline void init() {\n\t\ttmp.l = tmp.r = tmp.mx = 0;\n\t\ttmp.mn = inf;\n\t\tfill(tree+1, tree+400001, tmp);\n\t}\n\tinline void build(int k, int ll, int rr) {\n\t\ttree[k].l = ll, tree[k].r = rr;\n\t\tif(ll == rr) {\n\t\t\tscanf(\"%d\", &tree[k].mn);\n\t\t\ttree[k].mx = tree[k].mn;\n\t\t\treturn ;\n\t\t}\n\t\tint mid = (ll + rr) >> 1;\n\t\tbuild(k << 1, ll, mid);\n\t\tbuild((k << 1)+1, mid+1, rr);\n\t\ttree[k].mx = max(tree[k<<1].mx, tree[(k<<1)+1].mx);\n\t\ttree[k].mn = min(tree[k<<1].mn, tree[(k<<1)+1].mn);\n\t}\n\tinline void check(int k, int ll, int rr) {\n\t\tif(tree[k].l >= ll && tree[k].r <= rr) {\n\t\t\tans_mn = min(ans_mn, tree[k].mn);\n\t\t\tans_mx = max(ans_mx, tree[k].mx);\n\t\t\treturn ;\n\t\t}\n\t\tint mid = (tree[k].l + tree[k].r) >> 1;\n\t\tif(mid >= ll) check(k << 1, ll, rr);\n\t\tif(mid < rr) check((k<<1)+1, ll, rr);\n\t}\n\tinline LL solve() {\n\t\tinit();\n\t\tbuild(1, 1, n);\n\t\tLL Ans = 0;\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tfor(int j=i; j<=n; j++) {\n\t\t\t\tans_mx = 0, ans_mn = inf;\n\t\t\t\tcheck(1, i, j);\n\t\t\t\tAns += ans_mx - ans_mn;\n\t\t\t}\n\t\t}\n\t\treturn Ans;\n\t}\n}p60;\nint main() {\n\tfreopen(\"count.in\", \"r\", stdin);\n\tfreopen(\"count.out\", \"w\", stdout);\n\tcin>>T;\n\twhile (T--) {\n\t\tcin>>n\n\t\tcout<<p60.solve()<<endl;\n\t}\n\tfclose(stdin);\n\tfclose(stdout);\n}\n```\n\n---\n\n100 分\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nconst int maxn = 1e5+3;\ntypedef long long LL;\nLL s[maxn], n, a[maxn], T;\nstruct P100 {\n\tinline LL solve() {\n\t\tLL h = 1, t = 0, sum = 0, ans = 0;\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\twhile (h <= t && a[i] > a[s[t]]) sum -= a[s[t]] * (s[t]-s[t-1]), t--;\n\t\t\ts[++t] = i;\n\t\t\tsum += a[i] * (i-s[t-1]);\n\t\t\tans += sum;\n\t\t}\n\t\treturn ans;\n\t}\n}p100;\nint main() {\n\tfreopen(\"count.in\", \"r\", stdin);\n\tfreopen(\"count.out\", \"w\", stdout);\n\tcin>>T;\n\twhile (T--) {\n\t\tcin>>n;\n\t\tfor(int i=1; i<=n; i++)\n\t\t\tcin>>a[i];\n\t\tLL ans = p100.solve();\n\t\tfor(int i=1; i<=n; i++) a[i] = -a[i];\n\t\tcout<<ans + p100.solve()<<endl;\n\t}\n\tfclose(stdin);\n\tfclose(stdout);\n}\n```\n","source":"_posts/2018-9-21校内测试.md","raw":"---\ntitle: 2018.9.21校内测试\ndate: 2018-09-21 21:36:42\ntags: 校内测试\nmathjax: true\n---\n\n{% pdf ./pro.pdf %}\n\n### 解题报告---9.21\n\n---\n\n\n\n#### $\\text{T1}$ 相遇\n\n---\n\n\n\n##### 反思\n\n---\n\nT1 考到了 LCA，之前觉得没必要学，虽然也看过些文章，但大部分都没看懂，所以一直都不会，结果今天出上了这样的一道题，真尴尬，想着写写暴力吧，发现暴力也是求 LCA，无奈，遂放弃，考完试的下午就开始学 LCA，以后有能力学的东西尽量学学，不能老想着偷懒。\n\n\n\n##### 解题思路\n\n---\n\n画几个图会发现 $a\\rightarrow b,c\\rightarrow d$ 两条路径如果能够相交的话，需要满足其中一对点的 $\\text{LCA}$ 在另两个点之间的路径上。\n\n而一个点 $x$ 在一条路径 $s\\rightarrow t$ 上的充要条件是如下：\n\n- $depth[\\text{LCA}(s,t)]\\le depth[x]$\n- $\\text{LCA}(x,s)=x \\ ||\\  \\text{LCA}(x,t)=x$\n\n然后我们就可以做 $\\text{LCA}$ 进行求解，一组数据最多询问 $4$ 次。\n\n\n\n##### 代码\n\n---\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\nconst int maxn = 2e5+3;\nint n, head[maxn], cnt, depth[maxn], T, fa[maxn][32], m;\nstruct edge {\n\tint to, nxt;\n}ed[maxn], tmp;\nstruct P100 {\n\tinline void reset() {\n\t\tcnt = 0;\n\t\ttmp.to = tmp.nxt = 0;\n\t\tfill(ed+1, ed+1+maxn-3, tmp);\n\t\tmemset(head, 0, sizeof(head));\n\t\tmemset(depth, 0, sizeof(depth));\n\t\tmemset(fa, 0, sizeof(fa));\n\t}\n\tinline void addedge(int x, int y) {\n\t\ted[++cnt].nxt = head[x], head[x] = cnt, ed[cnt].to = y;\n\t\ted[++cnt].nxt = head[y], head[y] = cnt, ed[cnt].to = x;\n\t}\n\tinline void init() {\n\t\tfor(int j=1; 1<<j<=n; j++)\n\t\t\tfor(int i=1; i<=n; i++)\n\t\t\t\tfa[i][j] = fa[fa[i][j-1]][j-1];\n\t}\n\tinline void dfs(int u) {\n\t\tfor(int i=head[u]; i; i=ed[i].nxt) {\n\t\t\tif(ed[i].to == fa[u][0]) continue;\n\t\t\tfa[ed[i].to][0] = u;\n\t\t\tdepth[ed[i].to] = depth[u] + 1;\n\t\t\tdfs(ed[i].to);\n\t\t}\n\t}\n\tinline int lca(int a, int b) {\n\t\tif(depth[a] > depth[b]) swap(a, b);\n\t\tint h = depth[b] - depth[a];\n\t\tfor(int i=0; 1<<i<=h; i++)\n\t\t\tif((1<<i)&h) b = fa[b][i];\n\t\tif(a != b) {\n\t\t\tfor(int i=(int)log2(n); i>=0; i--) {\n\t\t\t\tif(fa[a][i] != fa[b][i])\n\t\t\t\t\ta = fa[a][i], b = fa[b][i];\n\t\t\t}\n\t\t\ta = fa[a][0];\n\t\t}\n\t\treturn a;\n\t}\n\tinline void solve() {\n\t\tdfs(1);\n\t\tinit();\n\t}\n\tinline bool judge(int a, int b, int c, int d) {\n\t\tint x = lca(a, b), y = lca(c, d);\n\t\tif(depth[x] < depth[y]) swap(x, y), swap(a, c), swap(b, d);\n\t\tif(lca(x, c) == x || lca(x, d) == x) return true;\n\t\treturn false;\n\t}\n}p100;\nint main() {\n\tfreopen(\"railway.in\", \"r\", stdin);\n\tfreopen(\"railway.out\", \"w\", stdout);\n\tscanf(\"%d\", &T);\n\twhile (T--) {\n\t\tp100.reset();\n\t\tscanf(\"%d%d\", &n, &m);\n\t\tint x, y;\n\t\tfor(int i=1; i<n; i++) {\n\t\t\tscanf(\"%d%d\", &x, &y);\n\t\t\tp100.addedge(x, y);\n\t\t}\n\t\tp100.solve();\n\t\tint a, b, c, d;\n\t\tfor(int i=1; i<=m; i++) {\n\t\t\tscanf(\"%d%d%d%d\", &a, &b, &c, &d);\n\t\t\tif(p100.judge(a, b, c, d)) printf(\"YES\\n\");\n\t\t\telse printf(\"NO\\n\");\n\t\t}\n\t}\n\tfclose(stdin);\n\tfclose(stdout);\n}\n```\n\n\n\n\n\n#### $\\text{T2}$ 计数\n\n---\n\n\n\n##### 反思\n\n---\n\n不开 `long long` 见祖宗，写了个 $60$ 分的暴力，因为没开 `long long` 所以 WA 成了 30 分，以后做题先看好数据范围，可以为了以防万一，能开 `long long` 就开 `long long` 。\n\n\n\n##### 解题思路\n\n---\n\n在考场上写了个线段树维护区间最大最小值。然后 $N^2$ 枚举，左右端点，求和。算上查询的时间是 $\\log N$ 总时间复杂度为 $N^2\\log N$ 可以过 60 分。\n\n再说正解：\n\n题目大意可以简化为求下面这个式子的值：\n$$\n\\sum_{r=1}^{n}\\sum_{l=1}^{r}max(a[x]-a[y],l\\le x,y\\le r)\n$$\n观察上面的式子，其实可以从 $1\\rightarrow n$ 算出每个数对答案的影响，相加就是答案。\n\n那么怎么算贡献呢。用单调栈维护，一个点被弹出后就将其贡献减去，被压入后，就将其贡献加上。\n\n求作为最大值的贡献和求作为最小值的贡献其实差不多，求最小值时将数组变成负数就又变成了求最大值的问题。\n\n所以可以用一个函数解决。\n\n\n\n##### 代码\n\n---\n\n60 分\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nconst int maxn = 1e5+3, inf = 2147483647;\ntypedef long long LL;\nLL T, n, a[maxn];\nstruct Tree {\n\tLL l, r, mx, mn;\n}tree[400003], tmp;\nLL ans_mn = inf, ans_mx;\nstruct P60 {\n\tinline void init() {\n\t\ttmp.l = tmp.r = tmp.mx = 0;\n\t\ttmp.mn = inf;\n\t\tfill(tree+1, tree+400001, tmp);\n\t}\n\tinline void build(int k, int ll, int rr) {\n\t\ttree[k].l = ll, tree[k].r = rr;\n\t\tif(ll == rr) {\n\t\t\tscanf(\"%d\", &tree[k].mn);\n\t\t\ttree[k].mx = tree[k].mn;\n\t\t\treturn ;\n\t\t}\n\t\tint mid = (ll + rr) >> 1;\n\t\tbuild(k << 1, ll, mid);\n\t\tbuild((k << 1)+1, mid+1, rr);\n\t\ttree[k].mx = max(tree[k<<1].mx, tree[(k<<1)+1].mx);\n\t\ttree[k].mn = min(tree[k<<1].mn, tree[(k<<1)+1].mn);\n\t}\n\tinline void check(int k, int ll, int rr) {\n\t\tif(tree[k].l >= ll && tree[k].r <= rr) {\n\t\t\tans_mn = min(ans_mn, tree[k].mn);\n\t\t\tans_mx = max(ans_mx, tree[k].mx);\n\t\t\treturn ;\n\t\t}\n\t\tint mid = (tree[k].l + tree[k].r) >> 1;\n\t\tif(mid >= ll) check(k << 1, ll, rr);\n\t\tif(mid < rr) check((k<<1)+1, ll, rr);\n\t}\n\tinline LL solve() {\n\t\tinit();\n\t\tbuild(1, 1, n);\n\t\tLL Ans = 0;\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tfor(int j=i; j<=n; j++) {\n\t\t\t\tans_mx = 0, ans_mn = inf;\n\t\t\t\tcheck(1, i, j);\n\t\t\t\tAns += ans_mx - ans_mn;\n\t\t\t}\n\t\t}\n\t\treturn Ans;\n\t}\n}p60;\nint main() {\n\tfreopen(\"count.in\", \"r\", stdin);\n\tfreopen(\"count.out\", \"w\", stdout);\n\tcin>>T;\n\twhile (T--) {\n\t\tcin>>n\n\t\tcout<<p60.solve()<<endl;\n\t}\n\tfclose(stdin);\n\tfclose(stdout);\n}\n```\n\n---\n\n100 分\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nconst int maxn = 1e5+3;\ntypedef long long LL;\nLL s[maxn], n, a[maxn], T;\nstruct P100 {\n\tinline LL solve() {\n\t\tLL h = 1, t = 0, sum = 0, ans = 0;\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\twhile (h <= t && a[i] > a[s[t]]) sum -= a[s[t]] * (s[t]-s[t-1]), t--;\n\t\t\ts[++t] = i;\n\t\t\tsum += a[i] * (i-s[t-1]);\n\t\t\tans += sum;\n\t\t}\n\t\treturn ans;\n\t}\n}p100;\nint main() {\n\tfreopen(\"count.in\", \"r\", stdin);\n\tfreopen(\"count.out\", \"w\", stdout);\n\tcin>>T;\n\twhile (T--) {\n\t\tcin>>n;\n\t\tfor(int i=1; i<=n; i++)\n\t\t\tcin>>a[i];\n\t\tLL ans = p100.solve();\n\t\tfor(int i=1; i<=n; i++) a[i] = -a[i];\n\t\tcout<<ans + p100.solve()<<endl;\n\t}\n\tfclose(stdin);\n\tfclose(stdout);\n}\n```\n","slug":"2018-9-21校内测试","published":1,"updated":"2018-09-21T13:47:37.230Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmc2fnp20000r410i1prcx60","content":"\n\n\t<div class=\"row\">\n    <embed src=\"./pro.pdf\" width=\"100%\" height=\"550\" type=\"application/pdf\">\n\t</div>\n\n\n\n<h3 id=\"解题报告—9-21\"><a href=\"#解题报告—9-21\" class=\"headerlink\" title=\"解题报告—9.21\"></a>解题报告—9.21</h3><hr>\n<h4 id=\"text-T1-相遇\"><a href=\"#text-T1-相遇\" class=\"headerlink\" title=\"$\\text{T1}$ 相遇\"></a>$\\text{T1}$ 相遇</h4><hr>\n<h5 id=\"反思\"><a href=\"#反思\" class=\"headerlink\" title=\"反思\"></a>反思</h5><hr>\n<p>T1 考到了 LCA，之前觉得没必要学，虽然也看过些文章，但大部分都没看懂，所以一直都不会，结果今天出上了这样的一道题，真尴尬，想着写写暴力吧，发现暴力也是求 LCA，无奈，遂放弃，考完试的下午就开始学 LCA，以后有能力学的东西尽量学学，不能老想着偷懒。</p>\n<h5 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h5><hr>\n<p>画几个图会发现 $a\\rightarrow b,c\\rightarrow d$ 两条路径如果能够相交的话，需要满足其中一对点的 $\\text{LCA}$ 在另两个点之间的路径上。</p>\n<p>而一个点 $x$ 在一条路径 $s\\rightarrow t$ 上的充要条件是如下：</p>\n<ul>\n<li>$depth[\\text{LCA}(s,t)]\\le depth[x]$</li>\n<li>$\\text{LCA}(x,s)=x \\ ||\\  \\text{LCA}(x,t)=x$</li>\n</ul>\n<p>然后我们就可以做 $\\text{LCA}$ 进行求解，一组数据最多询问 $4$ 次。</p>\n<h5 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h5><hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn = <span class=\"number\">2e5</span>+<span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n, head[maxn], cnt, depth[maxn], T, fa[maxn][<span class=\"number\">32</span>], m;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">edge</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> to, nxt;</span><br><span class=\"line\">&#125;ed[maxn], tmp;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">P100</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">reset</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tcnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ttmp.to = tmp.nxt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tfill(ed+<span class=\"number\">1</span>, ed+<span class=\"number\">1</span>+maxn<span class=\"number\">-3</span>, tmp);</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(head, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(head));</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(depth, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(depth));</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(fa, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(fa));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">addedge</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">\t\ted[++cnt].nxt = head[x], head[x] = cnt, ed[cnt].to = y;</span><br><span class=\"line\">\t\ted[++cnt].nxt = head[y], head[y] = cnt, ed[cnt].to = x;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>; <span class=\"number\">1</span>&lt;&lt;j&lt;=n; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++)</span><br><span class=\"line\">\t\t\t\tfa[i][j] = fa[fa[i][j<span class=\"number\">-1</span>]][j<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> u)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=head[u]; i; i=ed[i].nxt) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(ed[i].to == fa[u][<span class=\"number\">0</span>]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\tfa[ed[i].to][<span class=\"number\">0</span>] = u;</span><br><span class=\"line\">\t\t\tdepth[ed[i].to] = depth[u] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tdfs(ed[i].to);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">lca</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(depth[a] &gt; depth[b]) swap(a, b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> h = depth[b] - depth[a];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; <span class=\"number\">1</span>&lt;&lt;i&lt;=h; i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>((<span class=\"number\">1</span>&lt;&lt;i)&amp;h) b = fa[b][i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a != b) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=(<span class=\"keyword\">int</span>)log2(n); i&gt;=<span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(fa[a][i] != fa[b][i])</span><br><span class=\"line\">\t\t\t\t\ta = fa[a][i], b = fa[b][i];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\ta = fa[a][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tdfs(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tinit();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">bool</span> <span class=\"title\">judge</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b, <span class=\"keyword\">int</span> c, <span class=\"keyword\">int</span> d)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x = lca(a, b), y = lca(c, d);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(depth[x] &lt; depth[y]) swap(x, y), swap(a, c), swap(b, d);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(lca(x, c) == x || lca(x, d) == x) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;p100;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"railway.in\"</span>, <span class=\"string\">\"r\"</span>, <span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"railway.out\"</span>, <span class=\"string\">\"w\"</span>, <span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;T);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (T--) &#123;</span><br><span class=\"line\">\t\tp100.reset();</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>, &amp;n, &amp;m);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x, y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>, &amp;x, &amp;y);</span><br><span class=\"line\">\t\t\tp100.addedge(x, y);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tp100.solve();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> a, b, c, d;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=m; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d%d\"</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(p100.judge(a, b, c, d)) <span class=\"built_in\">printf</span>(<span class=\"string\">\"YES\\n\"</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">\"NO\\n\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"text-T2-计数\"><a href=\"#text-T2-计数\" class=\"headerlink\" title=\"$\\text{T2}$ 计数\"></a>$\\text{T2}$ 计数</h4><hr>\n<h5 id=\"反思-1\"><a href=\"#反思-1\" class=\"headerlink\" title=\"反思\"></a>反思</h5><hr>\n<p>不开 <code>long long</code> 见祖宗，写了个 $60$ 分的暴力，因为没开 <code>long long</code> 所以 WA 成了 30 分，以后做题先看好数据范围，可以为了以防万一，能开 <code>long long</code> 就开 <code>long long</code> 。</p>\n<h5 id=\"解题思路-1\"><a href=\"#解题思路-1\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h5><hr>\n<p>在考场上写了个线段树维护区间最大最小值。然后 $N^2$ 枚举，左右端点，求和。算上查询的时间是 $\\log N$ 总时间复杂度为 $N^2\\log N$ 可以过 60 分。</p>\n<p>再说正解：</p>\n<p>题目大意可以简化为求下面这个式子的值：<br>$$<br>\\sum_{r=1}^{n}\\sum_{l=1}^{r}max(a[x]-a[y],l\\le x,y\\le r)<br>$$<br>观察上面的式子，其实可以从 $1\\rightarrow n$ 算出每个数对答案的影响，相加就是答案。</p>\n<p>那么怎么算贡献呢。用单调栈维护，一个点被弹出后就将其贡献减去，被压入后，就将其贡献加上。</p>\n<p>求作为最大值的贡献和求作为最小值的贡献其实差不多，求最小值时将数组变成负数就又变成了求最大值的问题。</p>\n<p>所以可以用一个函数解决。</p>\n<h5 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h5><hr>\n<p>60 分</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn = <span class=\"number\">1e5</span>+<span class=\"number\">3</span>, inf = <span class=\"number\">2147483647</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</span><br><span class=\"line\">LL T, n, a[maxn];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Tree</span> &#123;</span></span><br><span class=\"line\">\tLL l, r, mx, mn;</span><br><span class=\"line\">&#125;tree[<span class=\"number\">400003</span>], tmp;</span><br><span class=\"line\">LL ans_mn = inf, ans_mx;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">P60</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\ttmp.l = tmp.r = tmp.mx = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ttmp.mn = inf;</span><br><span class=\"line\">\t\tfill(tree+<span class=\"number\">1</span>, tree+<span class=\"number\">400001</span>, tmp);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">build</span><span class=\"params\">(<span class=\"keyword\">int</span> k, <span class=\"keyword\">int</span> ll, <span class=\"keyword\">int</span> rr)</span> </span>&#123;</span><br><span class=\"line\">\t\ttree[k].l = ll, tree[k].r = rr;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ll == rr) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;tree[k].mn);</span><br><span class=\"line\">\t\t\ttree[k].mx = tree[k].mn;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> mid = (ll + rr) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tbuild(k &lt;&lt; <span class=\"number\">1</span>, ll, mid);</span><br><span class=\"line\">\t\tbuild((k &lt;&lt; <span class=\"number\">1</span>)+<span class=\"number\">1</span>, mid+<span class=\"number\">1</span>, rr);</span><br><span class=\"line\">\t\ttree[k].mx = max(tree[k&lt;&lt;<span class=\"number\">1</span>].mx, tree[(k&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>].mx);</span><br><span class=\"line\">\t\ttree[k].mn = min(tree[k&lt;&lt;<span class=\"number\">1</span>].mn, tree[(k&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>].mn);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"keyword\">int</span> k, <span class=\"keyword\">int</span> ll, <span class=\"keyword\">int</span> rr)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(tree[k].l &gt;= ll &amp;&amp; tree[k].r &lt;= rr) &#123;</span><br><span class=\"line\">\t\t\tans_mn = min(ans_mn, tree[k].mn);</span><br><span class=\"line\">\t\t\tans_mx = max(ans_mx, tree[k].mx);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> mid = (tree[k].l + tree[k].r) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(mid &gt;= ll) check(k &lt;&lt; <span class=\"number\">1</span>, ll, rr);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(mid &lt; rr) check((k&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>, ll, rr);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> LL <span class=\"title\">solve</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tinit();</span><br><span class=\"line\">\t\tbuild(<span class=\"number\">1</span>, <span class=\"number\">1</span>, n);</span><br><span class=\"line\">\t\tLL Ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i; j&lt;=n; j++) &#123;</span><br><span class=\"line\">\t\t\t\tans_mx = <span class=\"number\">0</span>, ans_mn = inf;</span><br><span class=\"line\">\t\t\t\tcheck(<span class=\"number\">1</span>, i, j);</span><br><span class=\"line\">\t\t\t\tAns += ans_mx - ans_mn;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> Ans;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;p60;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"count.in\"</span>, <span class=\"string\">\"r\"</span>, <span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"count.out\"</span>, <span class=\"string\">\"w\"</span>, <span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;T;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (T--) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;n</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;p60.solve()&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>100 分</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn = <span class=\"number\">1e5</span>+<span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</span><br><span class=\"line\">LL s[maxn], n, a[maxn], T;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">P100</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> LL <span class=\"title\">solve</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tLL h = <span class=\"number\">1</span>, t = <span class=\"number\">0</span>, sum = <span class=\"number\">0</span>, ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (h &lt;= t &amp;&amp; a[i] &gt; a[s[t]]) sum -= a[s[t]] * (s[t]-s[t<span class=\"number\">-1</span>]), t--;</span><br><span class=\"line\">\t\t\ts[++t] = i;</span><br><span class=\"line\">\t\t\tsum += a[i] * (i-s[t<span class=\"number\">-1</span>]);</span><br><span class=\"line\">\t\t\tans += sum;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;p100;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"count.in\"</span>, <span class=\"string\">\"r\"</span>, <span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"count.out\"</span>, <span class=\"string\">\"w\"</span>, <span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;T;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (T--) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">\t\tLL ans = p100.solve();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++) a[i] = -a[i];</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;ans + p100.solve()&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"解题报告—9.21\n\n\n\n$\\text{T1}$ 相遇\n\n\n\n反思\n\n\n\nT1 考到了 LCA，之前觉得没必要学，虽然也看过些文章，但大部分都没看懂，所以一直都不会，结果今天出上了这样的一道题，真尴尬，想着写写暴力吧，发现暴力也是求 LCA，无奈，遂放弃，考完试的下午就开始学 LCA，以后有能力学的东西尽量学学，不能老想着偷懒。\n\n解题思路\n\n\n\n画几个图会发现 $a\\rightarrow b,c\\rightarrow d$ 两条路径如果能够相交的话，需要满足其中一对点的 $\\text{LCA}$ 在另两个点之间的路径上。\n\n而一个点 $x$ 在一条路径 $s\\rightarrow t$ 上的","more":"\n\n\t<div class=\"row\">\n    <embed src=\"./pro.pdf\" width=\"100%\" height=\"550\" type=\"application/pdf\">\n\t</div>\n\n\n\n<h3 id=\"解题报告—9-21\"><a href=\"#解题报告—9-21\" class=\"headerlink\" title=\"解题报告—9.21\"></a>解题报告—9.21</h3><hr>\n<h4 id=\"text-T1-相遇\"><a href=\"#text-T1-相遇\" class=\"headerlink\" title=\"$\\text{T1}$ 相遇\"></a>$\\text{T1}$ 相遇</h4><hr>\n<h5 id=\"反思\"><a href=\"#反思\" class=\"headerlink\" title=\"反思\"></a>反思</h5><hr>\n<p>T1 考到了 LCA，之前觉得没必要学，虽然也看过些文章，但大部分都没看懂，所以一直都不会，结果今天出上了这样的一道题，真尴尬，想着写写暴力吧，发现暴力也是求 LCA，无奈，遂放弃，考完试的下午就开始学 LCA，以后有能力学的东西尽量学学，不能老想着偷懒。</p>\n<h5 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h5><hr>\n<p>画几个图会发现 $a\\rightarrow b,c\\rightarrow d$ 两条路径如果能够相交的话，需要满足其中一对点的 $\\text{LCA}$ 在另两个点之间的路径上。</p>\n<p>而一个点 $x$ 在一条路径 $s\\rightarrow t$ 上的充要条件是如下：</p>\n<ul>\n<li>$depth[\\text{LCA}(s,t)]\\le depth[x]$</li>\n<li>$\\text{LCA}(x,s)=x \\ ||\\  \\text{LCA}(x,t)=x$</li>\n</ul>\n<p>然后我们就可以做 $\\text{LCA}$ 进行求解，一组数据最多询问 $4$ 次。</p>\n<h5 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h5><hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn = <span class=\"number\">2e5</span>+<span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n, head[maxn], cnt, depth[maxn], T, fa[maxn][<span class=\"number\">32</span>], m;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">edge</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> to, nxt;</span><br><span class=\"line\">&#125;ed[maxn], tmp;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">P100</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">reset</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tcnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ttmp.to = tmp.nxt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tfill(ed+<span class=\"number\">1</span>, ed+<span class=\"number\">1</span>+maxn<span class=\"number\">-3</span>, tmp);</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(head, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(head));</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(depth, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(depth));</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(fa, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(fa));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">addedge</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">\t\ted[++cnt].nxt = head[x], head[x] = cnt, ed[cnt].to = y;</span><br><span class=\"line\">\t\ted[++cnt].nxt = head[y], head[y] = cnt, ed[cnt].to = x;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>; <span class=\"number\">1</span>&lt;&lt;j&lt;=n; j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++)</span><br><span class=\"line\">\t\t\t\tfa[i][j] = fa[fa[i][j<span class=\"number\">-1</span>]][j<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> u)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=head[u]; i; i=ed[i].nxt) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(ed[i].to == fa[u][<span class=\"number\">0</span>]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\tfa[ed[i].to][<span class=\"number\">0</span>] = u;</span><br><span class=\"line\">\t\t\tdepth[ed[i].to] = depth[u] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tdfs(ed[i].to);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">lca</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(depth[a] &gt; depth[b]) swap(a, b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> h = depth[b] - depth[a];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; <span class=\"number\">1</span>&lt;&lt;i&lt;=h; i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>((<span class=\"number\">1</span>&lt;&lt;i)&amp;h) b = fa[b][i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a != b) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=(<span class=\"keyword\">int</span>)log2(n); i&gt;=<span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(fa[a][i] != fa[b][i])</span><br><span class=\"line\">\t\t\t\t\ta = fa[a][i], b = fa[b][i];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\ta = fa[a][<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tdfs(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tinit();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">bool</span> <span class=\"title\">judge</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b, <span class=\"keyword\">int</span> c, <span class=\"keyword\">int</span> d)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x = lca(a, b), y = lca(c, d);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(depth[x] &lt; depth[y]) swap(x, y), swap(a, c), swap(b, d);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(lca(x, c) == x || lca(x, d) == x) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;p100;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"railway.in\"</span>, <span class=\"string\">\"r\"</span>, <span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"railway.out\"</span>, <span class=\"string\">\"w\"</span>, <span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;T);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (T--) &#123;</span><br><span class=\"line\">\t\tp100.reset();</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>, &amp;n, &amp;m);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x, y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>, &amp;x, &amp;y);</span><br><span class=\"line\">\t\t\tp100.addedge(x, y);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tp100.solve();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> a, b, c, d;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=m; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d%d\"</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(p100.judge(a, b, c, d)) <span class=\"built_in\">printf</span>(<span class=\"string\">\"YES\\n\"</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">\"NO\\n\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"text-T2-计数\"><a href=\"#text-T2-计数\" class=\"headerlink\" title=\"$\\text{T2}$ 计数\"></a>$\\text{T2}$ 计数</h4><hr>\n<h5 id=\"反思-1\"><a href=\"#反思-1\" class=\"headerlink\" title=\"反思\"></a>反思</h5><hr>\n<p>不开 <code>long long</code> 见祖宗，写了个 $60$ 分的暴力，因为没开 <code>long long</code> 所以 WA 成了 30 分，以后做题先看好数据范围，可以为了以防万一，能开 <code>long long</code> 就开 <code>long long</code> 。</p>\n<h5 id=\"解题思路-1\"><a href=\"#解题思路-1\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h5><hr>\n<p>在考场上写了个线段树维护区间最大最小值。然后 $N^2$ 枚举，左右端点，求和。算上查询的时间是 $\\log N$ 总时间复杂度为 $N^2\\log N$ 可以过 60 分。</p>\n<p>再说正解：</p>\n<p>题目大意可以简化为求下面这个式子的值：<br>$$<br>\\sum_{r=1}^{n}\\sum_{l=1}^{r}max(a[x]-a[y],l\\le x,y\\le r)<br>$$<br>观察上面的式子，其实可以从 $1\\rightarrow n$ 算出每个数对答案的影响，相加就是答案。</p>\n<p>那么怎么算贡献呢。用单调栈维护，一个点被弹出后就将其贡献减去，被压入后，就将其贡献加上。</p>\n<p>求作为最大值的贡献和求作为最小值的贡献其实差不多，求最小值时将数组变成负数就又变成了求最大值的问题。</p>\n<p>所以可以用一个函数解决。</p>\n<h5 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h5><hr>\n<p>60 分</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn = <span class=\"number\">1e5</span>+<span class=\"number\">3</span>, inf = <span class=\"number\">2147483647</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</span><br><span class=\"line\">LL T, n, a[maxn];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Tree</span> &#123;</span></span><br><span class=\"line\">\tLL l, r, mx, mn;</span><br><span class=\"line\">&#125;tree[<span class=\"number\">400003</span>], tmp;</span><br><span class=\"line\">LL ans_mn = inf, ans_mx;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">P60</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\ttmp.l = tmp.r = tmp.mx = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ttmp.mn = inf;</span><br><span class=\"line\">\t\tfill(tree+<span class=\"number\">1</span>, tree+<span class=\"number\">400001</span>, tmp);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">build</span><span class=\"params\">(<span class=\"keyword\">int</span> k, <span class=\"keyword\">int</span> ll, <span class=\"keyword\">int</span> rr)</span> </span>&#123;</span><br><span class=\"line\">\t\ttree[k].l = ll, tree[k].r = rr;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ll == rr) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;tree[k].mn);</span><br><span class=\"line\">\t\t\ttree[k].mx = tree[k].mn;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> mid = (ll + rr) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tbuild(k &lt;&lt; <span class=\"number\">1</span>, ll, mid);</span><br><span class=\"line\">\t\tbuild((k &lt;&lt; <span class=\"number\">1</span>)+<span class=\"number\">1</span>, mid+<span class=\"number\">1</span>, rr);</span><br><span class=\"line\">\t\ttree[k].mx = max(tree[k&lt;&lt;<span class=\"number\">1</span>].mx, tree[(k&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>].mx);</span><br><span class=\"line\">\t\ttree[k].mn = min(tree[k&lt;&lt;<span class=\"number\">1</span>].mn, tree[(k&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>].mn);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"keyword\">int</span> k, <span class=\"keyword\">int</span> ll, <span class=\"keyword\">int</span> rr)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(tree[k].l &gt;= ll &amp;&amp; tree[k].r &lt;= rr) &#123;</span><br><span class=\"line\">\t\t\tans_mn = min(ans_mn, tree[k].mn);</span><br><span class=\"line\">\t\t\tans_mx = max(ans_mx, tree[k].mx);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> mid = (tree[k].l + tree[k].r) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(mid &gt;= ll) check(k &lt;&lt; <span class=\"number\">1</span>, ll, rr);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(mid &lt; rr) check((k&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>, ll, rr);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> LL <span class=\"title\">solve</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tinit();</span><br><span class=\"line\">\t\tbuild(<span class=\"number\">1</span>, <span class=\"number\">1</span>, n);</span><br><span class=\"line\">\t\tLL Ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i; j&lt;=n; j++) &#123;</span><br><span class=\"line\">\t\t\t\tans_mx = <span class=\"number\">0</span>, ans_mn = inf;</span><br><span class=\"line\">\t\t\t\tcheck(<span class=\"number\">1</span>, i, j);</span><br><span class=\"line\">\t\t\t\tAns += ans_mx - ans_mn;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> Ans;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;p60;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"count.in\"</span>, <span class=\"string\">\"r\"</span>, <span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"count.out\"</span>, <span class=\"string\">\"w\"</span>, <span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;T;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (T--) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;n</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;p60.solve()&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>100 分</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn = <span class=\"number\">1e5</span>+<span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</span><br><span class=\"line\">LL s[maxn], n, a[maxn], T;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">P100</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">inline</span> LL <span class=\"title\">solve</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tLL h = <span class=\"number\">1</span>, t = <span class=\"number\">0</span>, sum = <span class=\"number\">0</span>, ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (h &lt;= t &amp;&amp; a[i] &gt; a[s[t]]) sum -= a[s[t]] * (s[t]-s[t<span class=\"number\">-1</span>]), t--;</span><br><span class=\"line\">\t\t\ts[++t] = i;</span><br><span class=\"line\">\t\t\tsum += a[i] * (i-s[t<span class=\"number\">-1</span>]);</span><br><span class=\"line\">\t\t\tans += sum;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;p100;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"count.in\"</span>, <span class=\"string\">\"r\"</span>, <span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"count.out\"</span>, <span class=\"string\">\"w\"</span>, <span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;T;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (T--) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">\t\tLL ans = p100.solve();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++) a[i] = -a[i];</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;ans + p100.solve()&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfclose(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfclose(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-09-20T07:27:19.543Z","updated":"2018-09-19T23:38:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjmc2fnpa0002r410exiyn1k0","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\n\nQuick Start\nCreate a new post\n1\n\n\n$ hexo new \"My New Post\"\n\n\nMore info: Writing\n\nRun server\n1\n\n\n$ hexo s","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"}],"PostAsset":[{"_id":"source/_posts/2018-9-21校内测试/pro.pdf","post":"cjmc2fnp20000r410i1prcx60","slug":"pro.pdf","modified":1,"renderable":1}],"PostCategory":[],"PostTag":[{"post_id":"cjmc2fnp20000r410i1prcx60","tag_id":"cjmc2fnpe0003r410s4aydlq7","_id":"cjmc2fnpi0004r410z6qyhjkn"}],"Tag":[{"name":"校内测试","_id":"cjmc2fnpe0003r410s4aydlq7"}]}}